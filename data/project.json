[
    {
      "title": "exploring mental health data",
      "description": "Trained a voting classifier using multiple ML algorithms to predict mental health conditions with 93.7% accuracy.",
      "technologies": ["voting_classifier", "scikit-learn", "python"],
      "tags": ["ai_ml", "data_science", "classification", "mental_health"],
      "kaggle": "https://www.kaggle.com/code/iitm21f1006461/voting-classifier?scriptVersionId=210518911"
    },
    {
      "title": "multi-class obesity risk prediction",
      "description": "Implemented XGBoost and SVM classifiers to classify obesity risk levels with 83.67% accuracy.",
      "technologies": ["xgboost", "svm", "scikit-learn", "python"],
      "tags": ["ai_ml", "data_science", "classification", "healthcare"]
    },
    {
      "title": "business data optimization (blue star, up branch)",
      "description": "Analyzed B2B HVAC&R operations using data-driven insights, delivering actionable recommendations with visualizations.",
      "technologies": ["excel", "python", "matplotlib", "pandas"],
      "tags": ["data_science", "business_analytics", "data_visualization", "operations"],
      "github": "https://github.com/the-y9/BDM-Report"
    },
    {
      "title": "image depth estimation with midas",
      "description": "Performed depth estimation using the MiDaS model and visualized results with OpenCV and Matplotlib.",
      "technologies": ["midas", "opencv", "pytorch", "matplotlib"],
      "tags": ["ai_ml", "computer_vision", "depth_estimation", "image_processing"],
      "github": "https://github.com/the-y9/Image_Depth"
    },
    {
      "title": "backend for tesseract ocr",
      "description": "Built a Flask API for extracting text from base64 images using Tesseract OCR, with error handling and validation.",
      "technologies": ["flask", "pytesseract", "pillow", "python"],
      "tags": ["developer", "backend", "api", "ocr", "flask"],
      "github": "https://github.com/the-y9/tesseract-ocr-api"
    }
  ]
  